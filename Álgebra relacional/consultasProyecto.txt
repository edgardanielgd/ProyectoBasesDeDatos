-- Nombres de proyectos hechos para un cliente (para cliente con nombre)

b1=ρ NombreProyecto←pro_nombreProyecto π Proyecto.pro_nombreProyecto (Proyecto ⨝ σ cli_razonSocial='Idiger' Cliente )

-- Nombres de tipos de ensayos realizados en un proyecto (para proyecto con ID 5)

b2=ρ NombreEnsayo ← tip_nombreTipoEnsayo π TipoEnsayo.tip_nombreTipoEnsayo  (((σ InformeFinal.pro_idProyecto=5 InformeFinal ⨝  ArchivoResultado) ⨝  EnsayoMuestra) ⨝  TipoEnsayo)

-- Nombres de los tipos de ensayos realizados a una muestra (Para muestra con id 4) (REV)

b4=ρ NombreEnsayo←tip_nombreTipoEnsayo π TipoEnsayo.tip_nombreTipoEnsayo  ((σ Muestra.mue_idMuestra=4 Muestra ⨝  EnsayoMuestra) ⨝  TipoEnsayo)

-- Nombre de los ensayos realizados a la muestra anterior y su ejecutor

b5=ρ NombreEnsayo←tip_nombreTipoEnsayo ρ Empleado←emp_nombreEmpleado π TipoEnsayo.tip_nombreTipoEnsayo,Empleado.emp_nombreEmpleado (((σ Muestra.mue_idMuestra=4 Muestra ⨝  EnsayoMuestra) ⨝  TipoEnsayo) ⨝ Empleado)

-- Nombres de proyectos cuyos informes aun no entregados (Cuyos proyectos no han sido pagados)

b6=ρ NombreProyecto←Proyecto.pro_nombreProyecto  π Proyecto.pro_nombreProyecto (( InformeFinal ⨝ Proyecto)⨝ σ EstadoPago.esp_fechaPagoTotal='' EstadoPago)

-- Quien hace un ensayo, estado de los ensayos, ruta del archivo (si fue ejecutado)

b7=ρ NombreEmpleado←Empleado.emp_nombreEmpleado ρ ApellidoEmpleado←Empleado.emp_apellidoEmpleado ρ Estado←EnsayoMuestra.ens_estado ρ Ruta←ArchivoResultado.ens_rutaArchivo π Empleado.emp_nombreEmpleado,Empleado.emp_apellidoEmpleado, EnsayoMuestra.ens_estado, ArchivoResultado.ens_rutaArchivo ((((Proyecto ⨝ Muestra) ⨝EnsayoMuestra)⨝ Empleado)⟕ArchivoResultado)

-- Obtener por localizaciones la cantidad de perforaciones hechas para un proyecto 

b8=γ Perforacion.per_localizacion; count(Perforacion.per_idPerforacion)→Cantidad (Perforacion⨝(σ pro_idProyecto=2 Proyecto))

-- Lista de ensayos que faltan por realizar en un proyecto dado por su ID

b9=ρ NombrePerforacion←per_nombrePerforacion ρ NumeroMuestra ← mue_numeroMuestra ρ ProfundidadMuestra ← mue_profundidad ρ TipoEnsayo ← tip_nombreTipoEnsayo π per_nombrePerforacion,mue_numeroMuestra,mue_profundidad,tip_nombreTipoEnsayo (( σ pro_idProyecto = 4 Perforacion) ⨝ Muestra ⨝ (σ ens_estado='Pendiente' EnsayoMuestra) ⨝ TipoEnsayo)

-- Lista de ensayos que ya se realizaron para un proyecto, junto con su ejecutor y fecha
b10=ρ NombrePerforacion←per_nombrePerforacion ρ NumeroMuestra ← mue_numeroMuestra ρ ProfundidadMuestra ← mue_profundidad ρ TipoEnsayo ← tip_nombreTipoEnsayo ρ NombreEmpleado ← emp_nombreEmpleado ρ Fecha ← ens_fechaEnsayoMuestra π per_nombrePerforacion,mue_numeroMuestra,mue_profundidad,tip_nombreTipoEnsayo,ens_fechaEnsayoMuestra,emp_nombreEmpleado (( σ pro_idProyecto = 4 Perforacion) ⨝ Muestra ⨝ (σ ens_estado='Finalizado' EnsayoMuestra) ⨝ TipoEnsayo ⨝ Empleado)

-- Abono y saldo por pagar para un proyecto dado su ID proyecto
b11=ρ RazonSocial←cli_razonSocial ρ NombreProyecto ← pro_nombreProyecto ρ ValorAbonado ← esp_valorAbonado ρ FechaAbono ← esp_fechaAbono  π cli_razonSocial,pro_nombreProyecto,esp_valorAbonado,esp_fechaAbono,(pro_valorTotal - esp_valorAbonado) →SaldoPagar (( σ pro_idProyecto = 3 Proyecto) ⨝ Cliente ⨝ EstadoPago)

-- Valor promedio $$$ contratado con un conjunto de clientes

b12=ρ RazonSocial←cli_razonSocial π cli_razonSocial,valorPromedioContratado γ cli_razonSocial;avg(pro_valorTotal)→valorPromedioContratado (Proyecto ⨝ (σ (cli_razonSocial='Idiger' or  cli_razonSocial='CI Ambiental S.A.S' or cli_razonSocial='DACH & ASOCIADOS S.A.S') Cliente))

-- Seleccionar los tipos de ensayo y la cantidad de ensayos muestra
-- que se han realizado sobre ellos, para aquellos con minimo tres ensayos a muestras

aux=γ tip_idTipoEnsayo,tip_nombreTipoEnsayo;count(ens_idEnsayoMuestra)→Cantidad (TipoEnsayo ⨝ EnsayoMuestra)

b13=ρ NombreTipoEnsayo←tip_nombreTipoEnsayo π tip_nombreTipoEnsayo,Cantidad (σ Cantidad>=3 aux)

-- Seleccionar los clientes para los cuales se han hecho mas de 3 ensayos (la seccion de 'distintos' aun no es posible en relax)

aux2=γ cli_NIT,cli_razonSocial;count(ens_idEnsayoMuestra)→Cantidad (Cliente ⨝ Proyecto ⨝ Perforacion ⨝ Muestra ⨝ EnsayoMuestra)

b14=ρ RazonSocial←cli_razonSocial π cli_razonSocial,Cantidad (σ Cantidad>=3 aux2)
